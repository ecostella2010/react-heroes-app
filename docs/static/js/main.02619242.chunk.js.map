{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.js","components/ui/Navbar.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/heroes/HeroScreen.js","selectors/getHeroeById.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","navigate","useNavigate","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","name","replace","Navbar","user","to","activeclassname","exact","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","MarvelScreen","HeroScreen","heroeId","useParams","history","find","length","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialForm","searchText","initialState","useState","values","setValues","target","value","useForm","formValues","handleInputChange","heroesFiltered","toLowerCase","getHeroesByName","onSubmit","e","preventDefault","console","log","placeholder","autoComplete","onChange","DashboardRoutes","path","element","PrivateRoute","isAuthenticated","Component","component","setItem","pathname","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02619242.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext ();\n\n\n\n","\n\nexport const types = {\n    login: '[auth] login',\n    logout: '[auth] logout',\n\n}","import { types } from \"../types/types\";\n\n// const state = {\n//     name : 'Fernando',\n//     logged: true\n// } \n\nexport const authReducer = ( state = {}, action) => {\n\n\n    switch (action.type) {\n        case types.login : \n            return {\n                ...action.payload,\n                logged : true,\n            }\n        case types.logout : \n            return {\n                logged : false\n            }\n        default:\n            return state;\n    }\n}","import React, { useContext } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n//no esta para dom v6\n//export const LoginScreen = ( { histoy  } ) => {\n\nexport const LoginScreen = () => {\n    \n    const navigate = useNavigate();\n\n    const { dispatch } = useContext(AuthContext);\n\n    const handleLogin = () => {\n        //console.log('Click');\n        //no funciona para V6\n        //histoy.push('/');\n        //Esto si funciona para V6\n        //navigate('/');\n        //no funciona para V6\n        //histoy.replace('/');\n        //Esto si funciona para V6 y sirve para reemplazar la historia de navagacion\n        \n        //publisher==='DC Comics'?navigate('/dc'):navigate('/marvel');\n\n        const lastPath = localStorage.getItem('lastPath') || '/';\n\n        dispatch({\n            type: types.login, \n            payload : {\n                name: 'Eduardo'\n            }\n         });\n\n         navigate(lastPath, {replace: true});\n\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>LoginScreen</h1>\n            <hr/>\n\n            <button\n                className=\"btn btn-primary\"\n                onClick={ handleLogin }\n            >\n\n                Login\n\n            </button>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const Navbar = () => {\n\n    const navigate = useNavigate();\n\n    const { user, dispatch } = useContext( AuthContext );\n    //console.log ( user.name );\n\n    //const { user: { name } } = useContext( AuthContext );\n    //console.log ( name );\n\n    // const handleChangeUser = useMemo(() => \n    //     setUser( \n    //     {\n    //         name: 'Eduardo'\n    //     }, [ user ]\n    //     ))\n\n    const handleLogout = () => {\n\n        navigate('/login', {replace: true}); \n\n        // 1.- Dispatch\n        dispatch({\n            type: types.logout, \n            payload : {\n                logged: false\n            }\n         });\n}\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                Asociaciones\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        activeclassname=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact=\"true\"\n                        to=\"/marvel\"\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink \n                        activeclassname=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact=\"true\"\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n                    <NavLink \n                        activeclassname=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact=\"true\"\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <span className=\"nav-item nav-link text-info\">\n                        { user.name }\n                    </span>\n                    <button \n                        activeclassname=\"active\"\n                        className=\"nav-item nav-link btn\"\n                        onClick = { handleLogout } \n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero':'Batman', \n        'publisher':'DC Comics', \n        'alter_ego':'Bruce Wayne',\n        'first_appearance':'Detective Comics #27',\n        'characters':'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero':'Superman', \n        'publisher':'DC Comics', \n        'alter_ego':'Kal-El',\n        'first_appearance':'Action Comics #1',\n        'characters':'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero':'Flash', \n        'publisher':'DC Comics', \n        'alter_ego':'Jay Garrick',\n        'first_appearance':'Flash Comics #1',\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero':'Green Lantern', \n        'publisher':'DC Comics', \n        'alter_ego':'Alan Scott',\n        'first_appearance':'All-American Comics #16',\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero':'Green Arrow', \n        'publisher':'DC Comics', \n        'alter_ego':'Oliver Queen',\n        'first_appearance':'More Fun Comics #73',\n        'characters':'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero':'Wonder Woman', \n        'publisher':'DC Comics', \n        'alter_ego':'Princess Diana',\n        'first_appearance':'All Star Comics #8',\n        'characters':'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero':'Martian Manhunter', \n        'publisher':'DC Comics', \n        'alter_ego':'J\\'onn J\\'onzz',\n        'first_appearance':'Detective Comics #225',\n        'characters':'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero':'Robin/Nightwing', \n        'publisher':'DC Comics', \n        'alter_ego':'Dick Grayson',\n        'first_appearance':'Detective Comics #38',\n        'characters':'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero':'Blue Beetle', \n        'publisher':'DC Comics', \n        'alter_ego':'Dan Garret',\n        'first_appearance':'Mystery Men Comics #1',\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero':'Black Canary', \n        'publisher':'DC Comics', \n        'alter_ego':'Dinah Drake',\n        'first_appearance':'Flash Comics #86',\n        'characters':'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero':'Spider Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Peter Parker',\n        'first_appearance':'Amazing Fantasy #15',\n        'characters':'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero':'Captain America', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Steve Rogers',\n        'first_appearance':'Captain America Comics #1',\n        'characters':'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero':'Iron Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Tony Stark',\n        'first_appearance':'Tales of Suspense #39',\n        'characters':'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero':'Thor', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Thor Odinson',\n        'first_appearance':'Journey into Myster #83',\n        'characters':'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero':'Hulk', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Bruce Banner',\n        'first_appearance':'The Incredible Hulk #1',\n        'characters':'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero':'Wolverine', \n        'publisher':'Marvel Comics', \n        'alter_ego':'James Howlett',\n        'first_appearance':'The Incredible Hulk #180',\n        'characters':'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero':'Daredevil', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Matthew Michael Murdock',\n        'first_appearance':'Daredevil #1',\n        'characters':'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero':'Hawkeye', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Clinton Francis Barton',\n        'first_appearance':'Tales of Suspense #57',\n        'characters':'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero':'Cyclops', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Scott Summers',\n        'first_appearance':'X-Men #1',\n        'characters':'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero':'Silver Surfer', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Norrin Radd',\n        'first_appearance':'The Fantastic Four #48',\n        'characters':'Norrin Radd'\n    }\n]","import React from 'react'\n\nimport { Link } from 'react-router-dom';\n// import { heroImages } from '../../helpers/heroImages';\n\nexport const HeroCard = ( {\n        id,\n        superhero,\n        alter_ego,\n        first_appearance,\n        characters\n    } ) => {\n    return (\n        <div className=\"card ms-3\" style={{ maxWidth: 540 }}>\n            <div className = \"row no-gutters\" >\n                <div className=\"col-md-4\">\n                    <img src = { `./assets/heroes/${ id }.jpg`} className=\"card-img\" alt = { superhero }></img>\n                    {/* <img src = { heroImages(`./${ id }.jpg`) } className=\"card-img\" alt = { superhero }></img> */}\n                </div>\n                <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\"> { superhero } </h5>\n                        <p className=\"card-text\"> { alter_ego } </p>\n                        {\n                            ( alter_ego !== characters )\n                            && <p className=\"card-text\"> { characters } </p>\n                        }\n\n                        <p className=\"text-muted\"> { first_appearance }</p>\n\n                        <Link className=\"\" to={ `../hero/${ id } ` }>\n                            Más...\n                        </Link>\n\n                    </div> \n                    \n                </div>\n\n            </div>\n          \n         </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\nimport { HeroCard } from './HeroCard';\nimport 'animate.css';\n\nexport const HeroList = ( { publisher } ) => {\n\n    //const heroes = getHeroesByPublisher( publisher );\n\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [ publisher ] );\n\n\n    return (\n        // <ol></ol>\n        //es para version boostrap 5 <div className=\"row row-cols-1 row-cols-md-4 g-4\">\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            {\n                heroes.map ( hero => (\n                    // <li key= { hero.id }>\n                    //     {hero.superhero}\n                    // </li>\n                    <HeroCard key= { hero.id }\n                        { ...hero }\n                    />\n                ) )\n            }\n            \n        </div>\n    )\n}\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByPublisher = ( publisher ) => {\n\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n\n    if ( !validPublishers.includes ( publisher ) ) {\n        throw new Error (`Publisher \"${ publisher }\" no es correcto`);\n    }\n\n    return heroes.filter ( hero => hero.publisher === publisher );\n\n}\n\n ","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\n\nexport const MarvelScreen = () => {\n\n    // return <Redirect to=\"/login\" />;\n    return (\n        \n        <div>\n            <h1> Marvel Screen</h1>\n            <HeroList publisher = { \"Marvel Comics\" } />\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { useParams, useNavigate, Navigate as Redirect } from \"react-router-dom\";\nimport { getHeroeById } from '../../selectors/getHeroeById';\nimport 'animate.css';\n\n// import batman from '../../assets/heroes/dc-batman.jpg'; //Estatico\n\n// const heroesImages = require.context('../../assets/heroes', true);\n\nexport const HeroScreen = () => {\n\n    // const params = useParams();\n    const { heroeId } = useParams();\n\n    const history = useNavigate();\n\n    //console.log(heroeId);\n\n    //const hero = getHeroeById(heroeId);\n    const hero = useMemo(() => getHeroeById(heroeId), [ heroeId ] );\n\n\n    //console.log(hero);\n\n    if ( !hero) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const handleReturn = () => {\n        \n        //console.log (history);\n\n        if (history.length <= 2 )\n        {\n            publisher==='DC Comics'?history('/dc'):history('/marvel');               \n        } else {\n            history(-1);\n        }\n        \n        // const handleReturn = () => {\n        //     history(-1);\n        //   };\n        // console.log (history(-1));\n        // return <Redirect to=\"/\" />;\n    }\n\n    const { \n        superhero,\n        publisher,\n        alter_ego,\n        first_appearance,\n        characters\n    } = hero; \n\n\n    return (\n        <div  className=\"row mt-5\">\n            <div className=\"col-4\">\n                <img\n                    src={ `../assets/heroes/${ heroeId }.jpg` }\n                    // src={ heroesImages(`./${ heroeId }.jpg`) }\n                    alt={ superhero }\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n                ></img>\n\n            </div>\n\n            <div className=\"col-8 animate__animated animate__fadeIn\">\n                <h3> { superhero  } </h3>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\"> <b> Alter ego: </b> { alter_ego } </li>\n                    <li className=\"list-group-item\"> <b> Publisher: </b> { publisher } </li>\n                    <li className=\"list-group-item\"> <b> First appearance: </b> { first_appearance } </li>\n                </ul>\n                <h5> Characters </h5>\n                <p> { characters }</p>\n                <button \n                    className=\"btn btn-outline-info\"\n                    onClick= { handleReturn }\n                >\n\n                    Return\n                </button>\n            </div>\n\n            \n\n        </div>\n    )\n}\n","import { heroes } from '../data/heroes';\n\nexport const getHeroeById = ( id ) => {\n\n    return heroes.find ( hero => hero.id === id );\n\n}","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1>DC Screen</h1>\n            <HeroList publisher = { \"DC Comics\" } />\n        </div>\n    )\n}\n","import React, { useMemo } from 'react';\nimport queryString from  'query-string';\n// import { heroes } from '../../data/heroes';\nimport { useForm } from '../../hooks/useForm';\nimport { HeroCard } from '../heroes/HeroCard'\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\nexport const SearchScreen = ( ) => {\n\n    const location = useLocation();\n\n    //console.log(location);\n\n    // const queryString = require('query-string');\n    // const parsed = queryString.parse(location.search);\n    // console.log(parsed);\n    //=> {foo: 'bar'}\n    const { q = ''} = queryString.parse(location.search);\n\n    \n    \n    const initialForm = {\n        searchText: q\n    };\n\n    const history = useNavigate();\n\n    const [ formValues, handleInputChange] = useForm( initialForm );\n    const { searchText } = formValues;\n\n    //const heroesFiltered = heroes;\n\n    //const heroesFiltered =  getHeroesByName ( searchText );\n\n    const heroesFiltered = useMemo(() => getHeroesByName ( q ), [ q ]);\n\n    // heroes.filter ( hero => hero.superhero.includes( searchText )); \n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        history(`?q=${ searchText }` );\n        console.log(searchText);\n       \n    }\n    return (\n        <div>\n            <h1>Search Screen</h1>\n            <hr/>\n            \n            <div className=\"row\">\n                <div className=\"col-5\">\n                    <h4> Search Form </h4>\n                    <hr/>\n                    <form onSubmit={ handleSearch }>\n                        <input\n                            type =\"text\"\n                            placeholder=\"Find your hero\"\n                            className=\"form-control\"\n                            name = \"searchText\"\n                            autoComplete=\"off\"\n                            value = { searchText } \n                            onChange= { handleInputChange }\n                        />\n                        <button\n                            type = \"submit\"\n                            className=\"btn btn-block btn-outline-primary\"\n                        >    Search\n                        </button>\n                        \n                    </form>\n\n                </div>\n                <div className=\"col-7\">\n                    <h4> Results </h4>\n                    <hr/>\n\n                    {\n                        ( q === '' )\n                        &&\n                        <div className=\"alert alert-info\">\n                            Search a Heroe\n                        </div>\n\n                    }\n\n{\n                        ( q !== ''  && heroesFiltered.length === 0)\n                        &&\n                        <div className=\"alert alert-danger\">\n                            There is no a hero with \"{ q }\"\n                        </div>\n                        \n                    }\n                    \n\n                    {\n\n                        heroesFiltered.map ( hero => (\n                            <HeroCard \n                                key = { hero.id }\n                                { ...hero }\n                            />\n                        ))\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { useState } from \"react\"\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () =>{\n        setValues( initialState ); \n    }\n\n    const handleInputChange = ({target}) => {\n        setValues({\n            ...values,\n            [target.name] : target.value\n        });\n    };\n\n    return [ values, handleInputChange, reset ];\n\n\n}\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByName = ( name = '' ) => {\n\n    if ( name === '' ) {\n        return [];\n    }\n\n    return heroes.filter ( hero => hero.superhero.toLowerCase().includes ( name.toLowerCase() ) );\n\n}\n\n ","import React from 'react';\nimport { Navbar } from '../components/ui/Navbar';\nimport {\n    Routes as Switch,\n    Navigate as Redirect,\n    Route\n  } from 'react-router-dom';\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { HeroScreen } from '../components/heroes/HeroScreen';\nimport { DcScreen } from '../components/dc/DcScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\nexport const DashboardRoutes = () => {\n    return (\n        <>\n            <Navbar />\n            <div className=\"container mt-2\">\n\n                <Switch>\n                    <Route exact path=\"/marvel\" element={<MarvelScreen />} />\n                    <Route exact path=\"/hero/:heroeId\" element={<HeroScreen />} />\n                    <Route exact path=\"/dc\" element={<DcScreen />} />\n                    <Route exact path=\"/search\" element={<SearchScreen />} />\n                    {/* <Redirect to=\"/marvel\"/> */}\n                    <Route path=\"/*\" element={<Redirect to=\"/Marvel\"/>}>\n                        {/* { <Redirect to=\"/\"/>} */}\n                        {/* { navigate('/', {replace: true}) } */}\n                    </Route>\n                </Switch>\n\n\n            </div>\n\n        </>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    //Route, \n    useLocation,\n    Navigate as Redirect\n  } from 'react-router-dom';\n// Para Version dom 6 \n\nexport const PrivateRoute = ({ \n        isAuthenticated, \n        component: Component\n     }) => {\n     \n     const location = useLocation();\n     //console.log(location.pathname);\n     //console.log(location.search);\n     localStorage.setItem('lastPath', location.pathname);\n    \n    //const auth = null; // determine if authorized, from context or however you're doing it\n\n    // If authorized, return an outlet that will render child elements\n    // If not, return element that will navigate to login page\n    return isAuthenticated ? <Component /> : <Redirect to=\"/login\" />;\n}\n\n// Para Version dom 5  \n// export const PrivateRoute = ( { \n//     isAuthenticated,\n//     component : Component,\n//     ...rest\n\n// } ) => {\n    \n//     return (\n//         <Route  { ...rest }\n//             component = { ( props ) => (\n//                 ( isAuthenticated )\n//                 ? <Component { ...props } />\n//                 : <Redirect to=\"/login\" />  \n//             )}\n            \n//         />\n//     )\n// }\n\n// PrivateRoute.propTypes = {\n//     isAuthenticated: PropTypes.bool.isRequired,\n//     component: PropTypes.func.isRequired\n// }\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    //Route, \n    Navigate as Redirect\n  } from 'react-router-dom';\n// Para Version dom 6 \n\nexport const PublicRoute = ({ isAuthenticated, component: Component }) => {\n    //const auth = null; // determine if authorized, from context or however you're doing it\n\n    // If authorized, return an outlet that will render child elements\n    // If not, return element that will navigate to login page\n    return !isAuthenticated ? <Component /> : <Redirect to=\"/\" />;\n}\n\n// Para Version dom 5  \n// export const PrivateRoute = ( { \n//     isAuthenticated,\n//     component : Component,\n//     ...rest\n\n// } ) => {\n    \n//     return (\n//         <Route  { ...rest }\n//             component = { ( props ) => (\n//                 ( !isAuthenticated )\n//                 ? <Component { ...props } />\n//                 : <Redirect to=\"/\" />  \n//             )}\n            \n//         />\n//     )\n// }\n\n// PrivateRoute.propTypes = {\n//     isAuthenticated: PropTypes.bool.isRequired,\n//     component: PropTypes.func.isRequired\n// }\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useContext } from 'react'\nimport {\n    BrowserRouter as Router,\n    Routes as Switch,\n    Route,\n  } from 'react-router-dom';\nimport { AuthContext } from '../auth/AuthContext';\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n// import { Navbar } from '../components/ui/Navbar';\n\nexport const AppRouter = () => {\n    const { user } = useContext( AuthContext ); \n\n    return (\n\n        <Router>\n            {/* <h1>Hola</h1>     */}\n            <div>\n                {/* <Navbar /> */}\n    \n                {/* A <Switch> looks through its children <Route>s and\n                    renders the first one that matches the current URL. \n                <Switch>\n                        <Route path=\"/about\" element={<AboutScreen />}>\n                        </Route>\n                </Switch>    \n                    \n                */}\n                <Switch>\n                    {/* <Route exact path=\"/login\" element={ <LoginScreen /> } /> */}\n                    {/* <PublicRoute exact path=\"/login\" element={ <LoginScreen /> } /> */}\n                    <Route exact path=\"/login\" element={ <PublicRoute isAuthenticated = { user.logged } component = { LoginScreen }/> } />\n                    <Route path=\"/*\" element={ <PrivateRoute isAuthenticated = { user.logged } component = { DashboardRoutes } /> } />\n                    {/* dom v5 <PrivateRoute isAuthenticated = { user.logged } path=\"/*\" element={ <DashboardRoutes /> } /> */}\n                    {/* <Route exact path=\"/login\" element={<LoginScreen />} /> */}\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React, { useEffect, useReducer } from 'react'\nimport { AuthContext } from './auth/AuthContext'\nimport { authReducer } from './auth/authReducer'\nimport { AppRouter } from './routers/AppRouter'\n\nconst init = () => {\n    return JSON.parse (localStorage.getItem('user')) || { logged : false };\n}\n\nexport const HeroesApp = () => {\n    \n    const [ user, dispatch ] = useReducer(authReducer, {}, init);\n\n    useEffect(() => {\n        localStorage.setItem( 'user', JSON.stringify ( user ) );\n        \n    }, [ user ])\n\n    return (\n        <AuthContext.Provider value = {{ user, dispatch }} >\n        < AppRouter />\n        </AuthContext.Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n    <HeroesApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}